[build-system]
requires = [
    "setuptools >=42",
    "setuptools-scm[toml]",
    "scikit-build",
]
build-backend = "setuptools.build_meta"

[tool.setuptools_scm]
write_to = "src/ninja/_version.py"

[tool.cibuildwheel]
build = "cp39-*"
build-verbosity = 1
before-all = [
    'pipx install -f --pip-args="-c {project}/constraints-ci.txt" cmake',
    'cmake --version',
]
before-build = "pip install -r requirements-repair.txt"
repair-wheel-command = "python scripts/repair_wheel.py -w {dest_dir} {wheel}"
test-extras = "test"
test-command = "pytest {project}/tests"
test-skip = ["*-win_arm64", "*-macosx_universal2:arm64"]

[[tool.cibuildwheel.overrides]]
select = "*-manylinux_{x86_64,i686}"
manylinux-x86_64-image = "manylinux1"
manylinux-i686-image = "manylinux1"
environment = { LDFLAGS = "-static-libstdc++" }

[tool.cibuildwheel.macos.environment]
MACOSX_DEPLOYMENT_TARGET = "10.9"

[tool.cibuildwheel.windows]
before-all = [
    'pipx install -f --pip-args="-c {project}/constraints-ci.txt" cmake',
    'cmake --version',
    'pipx install -f --pip-args="-c {project}/constraints-ci.txt" ninja',
    'ninja --version',
]

[[tool.cibuildwheel.overrides]]
select = "*-musllinux_*"
environment = { LDFLAGS = "-static-libstdc++ -static-libgcc" }

[tool.isort]
profile = "black"
