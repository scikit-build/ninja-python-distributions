name: CI

on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - master
      - main
    tags:
      - "*.*.*"

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: "3.x"
      - uses: pre-commit/action@v3.0.0


  build_wheels:
    name: Build ${{ matrix.arch }} wheels on ${{ matrix.os }}
    needs: [lint]
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-20.04
            arch: "x86_64"
          - os: ubuntu-20.04
            arch: "i686"
          - os: ubuntu-20.04
            arch: "aarch64"
          - os: ubuntu-20.04
            arch: "ppc64le"
          - os: ubuntu-20.04
            arch: "s390x"
          - os: windows-2019
            arch: "AMD64"
          - os: windows-2019
            arch: "x86"
          - os: macos-10.15
            arch: "universal2"

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # required for versioneer to find tags

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2.1.0
        if: runner.os == 'Linux'

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.11.1
        env:
          CIBW_ARCHS: "${{ matrix.arch }}"

      - uses: actions/upload-artifact@v3
        with:
          path: ./wheelhouse/*.whl

  build_sdist:
    name: Build source distribution
    needs: [lint]
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # required for versioneer to find tags

      - name: Build SDist
        run: pipx run build --sdist

      - uses: actions/upload-artifact@v3
        with:
          path: dist/*.tar.gz

  test_sdist:
    name: Test SDist with python ${{ matrix.python }}
    needs: [build_sdist]
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        python: ["2.7", "3.6", "3.10-dev"]

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v4
        name: Install Python ${{ matrix.python }}
        with:
          python-version: ${{ matrix.python }}

      - uses: actions/download-artifact@v3
        with:
          name: artifact
          path: sdist

      - name: Install SDist
        env:
          SKBUILD_CONFIGURE_OPTIONS: "-DBUILD_CMAKE_FROM_SOURCE:BOOL=OFF"
        run: pip install sdist/*.tar.gz

      - name: Install test dependencies
        run: pip install -r requirements-test.txt

      - name: Test installed SDist
        run: pytest ./tests

  check_dist:
    name: Check dist
    needs: [build_wheels, build_sdist, test_sdist]
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: artifact
          path: dist

      - run: pipx run twine check --strict dist/*

  upload_pypi:
    name: Upload to PyPI
    needs: [build_wheels, build_sdist, test_sdist, check_dist]
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.repository == 'scikit-build/ninja-python-distributions' && startsWith(github.ref, 'refs/tags/')
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: artifact
          path: dist

      - name: Upload to PyPI
        uses: pypa/gh-action-pypi-publish@v1.5.1
        with:
          user: __token__
          password: ${{ secrets.PYPI_RELEASE_PASSWORD }}
